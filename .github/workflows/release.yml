name: Release & Publish

on:
  push:
    branches:
      - master
      - widgets

jobs:
  on-failure:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'failure' }}
    steps:
      - name: Discord notification
        uses: Ilshidur/action-discord@master
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        with:
          args: 'The project {{ EVENT_PAYLOAD.repository.full_name }} has been failed to release.'

  on-success:
    needs:
      - version
      - build
      - release
      - sentry
    runs-on: ubuntu-latest
    steps:
      - name: Discord notification
        uses: Ilshidur/action-discord@master
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        with:
          args: 'The project {{ EVENT_PAYLOAD.repository.full_name }} has been released to ${{needs.tagname_compute.outputs.tag_name}}.'

  version:
    name: Compute tag infos
    runs-on: ubuntu-latest
    outputs:
      new_tag: ${{ steps.tag_version.outputs.new_tag }}
      new_version: ${{ steps.tag_version.outputs.new_version }}
      previous_tag: ${{ steps.tag_version.outputs.previous_tag }}
      previous_version: ${{ steps.tag_version.outputs.previous_version }}
      release_type: ${{ steps.tag_version.outputs.release_type }}
      tag_changelog: ${{ steps.tag_version.outputs.changelog }}
    steps:
      - uses: actions/checkout@v3
      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          dry_run: true

  build:
    name: Prepare & build packages
    needs:
      - version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Update version in YAML
        run: sed -i 's/ 0.0.0+1/ ${{ needs.version.outputs.new_version }}+${{ github.run_number }}/g' pubspec.yaml
      - name: Update KeyStore password in gradle properties
        run: sed -i 's/#{KEYSTORE_PASS}#/${{ secrets.KEYSTORE_PASS }}/g' android/key.properties
      - name: Update KeyStore key password in gradle properties
        run: sed -i 's/#{KEYSTORE_KEY_PASS}#/${{ secrets.KEYSTORE_KEY_PASS }}/g' android/key.properties
      - name: Configure signature & envs
        run: |
          echo "const String nemoPayAppId='80405';" >> lib/src/env.dart
          echo "const String casUrl='https://cas.utc.fr/cas/';" >> lib/src/env.dart
          echo "const String nemoPayUrl='https://api.nemopay.net/';" >> lib/src/env.dart
          echo "const String payUrlCallback='https://assos.utc.fr/pay_app_callback';" >> lib/src/env.dart
          echo "const String nemoPayKey='${{secrets.WEEZPAY_APPKEY}}';" >> lib/src/env.dart
          echo "const String gingerKey='${{secrets.GINGER_APPKEY}}';" >> lib/src/env.dart
          echo "const String sentryDsn='${{secrets.SENTRY_DSN}}';" >> lib/src/env.dart
      - uses: actions/setup-java@v1
        with:
          java-version: '12.x'
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
      - name: 📦 Get dependencies and prepare build
        run: |
          flutter pub get
          flutter pub global activate intl_utils
          flutter pub global run intl_utils:generate
      - name: 🧪 Run tests
        run: |
          flutter pub run build_runner build --delete-conflicting-outputs
          flutter test
      - name: 🏗️ Build
        run: |
          flutter build appbundle
          flutter build apk --release --split-per-abi
      - name: ☁ Upload app bundle
        uses: actions/upload-artifact@v3
        with:
          name: appbundle
          path: build/app/outputs/bundle/release/*.aab
      - name: ☁ Upload apk
        uses: actions/upload-artifact@v3
        with:
          name: apk
          path: build/app/outputs/apk/release/*.apk

  release:
    name: Release app to internal track
    needs:
      - version
      - build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Get appbundle from artifacts
        uses: actions/download-artifact@v3
        with:
          name: appbundle
      - name: Get apk from artifacts
        uses: actions/download-artifact@v3
        with:
          name: apk
      - name: Upload the APK onto GitHub
        uses: ncipollo/release-action@v1
        with:
          artifacts: '*.apk,*.aab'
          name: Release ${{ needs.version.outputs.new_tag }}
          tag: ${{ needs.version.outputs.new_tag }}
          body: ${{ needs.version.outputs.tag_changelog }}
          generateReleaseNotes: true
  #      - name: Release app to internal track
  #        uses: r0adkll/upload-google-play@v1
  #        with:
  #          serviceAccountJsonPlainText: ${{ secrets.PLAYSTORE_ACCOUNT_KEY }}
  #          packageName: com.simde.payutc
  #          releaseFiles: 'app-release.aab'
  #          track: internal
  #          releaseName: ${{ needs.version.outputs.new_tag }}
  #          whatsNewDirectory: distribution/whatsnew

  sentry:
    name: Sentry Release
    runs-on: ubuntu-latest
    needs:
      - version
      - build
      - release
    steps:
      - uses: actions/checkout@v3
      - name: Create Sentry release
        uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: simde-utc
        with:
          environment: production
          projects: payutc-mobile
          version: ${{ needs.tagname_compute.outputs.tag_name }}
          ignore_empty: true
